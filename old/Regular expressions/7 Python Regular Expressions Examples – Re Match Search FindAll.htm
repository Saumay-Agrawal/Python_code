<!DOCTYPE html>
<html dir="ltr" lang="en-US"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" type="text/css" href="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/css.css" media="screen, projection">
<title>7 Python Regular Expressions Examples – Re Match Search FindAll</title>
<meta name="description" content="Regular expressions as a concept is not exclusive to Python at all. Python, however, does have some nuances when it come to working with regular expression">
<meta name="robots" content="noodp, noydir">
<link rel="canonical" href="http://www.thegeekstuff.com/2014/07/python-regex-examples/">
<link rel="alternate" type="application/rss+xml" title="The Geek Stuff feed" href="http://www.thegeekstuff.com/feed/">
<link rel="pingback" href="http://www.thegeekstuff.com/xmlrpc.php">

<!-- All in One SEO Pack 2.2.6.2 by Michael Torbert of Semper Fi Web Design[295,371] -->
<meta name="description" content="Regular expressions as a concept is not exclusive to Python at all. Python, however, does have some nuances when it come to working with regular">

<link rel="canonical" href="http://www.thegeekstuff.com/2014/07/python-regex-examples/">
<!-- /all in one seo pack -->
<link rel="alternate" type="application/rss+xml" title="The Geek Stuff » 7 Python Regular Expressions Examples – Re Match Search FindAll Comments Feed" href="http://www.thegeekstuff.com/2014/07/python-regex-examples/feed/">
		<script async="" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/cbgapi.loaded_1"></script><script async="" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/cbgapi.loaded_0"></script><script src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/ca-pub-8090601437064582.js"></script><script src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/ga.js" async="" type="text/javascript"></script><script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/72x72\/","ext":".png","source":{"concatemoji":"http:\/\/www.thegeekstuff.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=4.4.4"}};
			!function(a,b,c){function d(a){var c,d,e,f=b.createElement("canvas"),g=f.getContext&&f.getContext("2d"),h=String.fromCharCode;return g&&g.fillText?(g.textBaseline="top",g.font="600 32px Arial","flag"===a?(g.fillText(h(55356,56806,55356,56826),0,0),f.toDataURL().length>3e3):"diversity"===a?(g.fillText(h(55356,57221),0,0),c=g.getImageData(16,16,1,1).data,g.fillText(h(55356,57221,55356,57343),0,0),c=g.getImageData(16,16,1,1).data,e=c[0]+","+c[1]+","+c[2]+","+c[3],d!==e):("simple"===a?g.fillText(h(55357,56835),0,0):g.fillText(h(55356,57135),0,0),0!==g.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag"),unicode8:d("unicode8"),diversity:d("diversity")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag&&c.supports.unicode8&&c.supports.diversity||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);
		</script><script type="text/javascript" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/wp-emoji-release.js"></script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
<link rel="https://api.w.org/" href="http://www.thegeekstuff.com/wp-json/">
<link rel="alternate" type="application/json+oembed" href="http://www.thegeekstuff.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.thegeekstuff.com%2F2014%2F07%2Fpython-regex-examples%2F">
<link rel="alternate" type="text/xml+oembed" href="http://www.thegeekstuff.com/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.thegeekstuff.com%2F2014%2F07%2Fpython-regex-examples%2F&amp;format=xml">
<link rel="shortcut icon" href="http://static.thegeekstuff.com/wp-content/uploads/2015/05/favicon.ico.gzip">
<script src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/a_002" type="text/javascript"></script><script src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/inputtools.js" type="text/javascript"></script></head>
<body class="template-single">
<script type="text/javascript">
var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'UA-5302569-1']);
_gaq.push(['_trackPageview']);
(function() {
var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
})();
</script>
<div class="container">
	<div id="header" class="header">
<p id="logo"><a href="http://www.thegeekstuff.com/"><img src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/thegeekstuff.gif" alt="The Geek Stuff"></a></p><div id="header_ad"><div id="header_ad1">
<script async="" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/adsbygoogle.js"></script>
<!-- TGS Logo Header -->
<ins data-adsbygoogle-status="done" class="adsbygoogle" style="display:inline-block;width:728px;height:90px" data-ad-client="ca-pub-8090601437064582" data-ad-slot="4708993701"><ins id="aswift_0_expand" style="display:inline-table;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent"><ins id="aswift_0_anchor" style="display:block;border:none;height:90px;margin:0;padding:0;position:relative;visibility:visible;width:728px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left:0;position:absolute;top:0;" frameborder="0" height="90" width="728"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div></div>
	</div>
	<span class="menu_control">≡ Menu</span>
<ul id="menu-tgs-menu" class="menu"><li id="menu-item-15798" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-15798"><a href="http://www.thegeekstuff.com/">Home</a></li>
<li id="menu-item-15797" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-15797"><a href="http://www.thegeekstuff.com/linux-101-hacks-ebook/">Free eBook</a></li>
<li id="menu-item-15805" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-15805"><a href="http://www.thegeekstuff.com/best-of-the-blog/">Start Here</a></li>
<li id="menu-item-15800" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-15800"><a href="http://www.thegeekstuff.com/contact/">Contact</a></li>
<li id="menu-item-15802" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-15802"><a href="http://www.thegeekstuff.com/about/">About</a></li>
</ul>
	<div class="columns">
		<div class="content">
			<div id="post-16047" class="post_box grt top" itemscope="" itemtype="http://schema.org/Article">
				<div class="headline_area">
					<h1 class="headline" itemprop="name">7 Python Regular Expressions Examples – Re Match Search FindAll</h1>
					<div class="byline small">
						<span class="post_author_intro">by</span> <span class="post_author" itemprop="author">Aaron Tabor</span>
						<meta itemprop="datePublished" content="2014-07-14">
						<meta itemprop="dateModified" content="2014-07-15">
						<span class="post_date_intro">on</span> <span class="post_date" title="2014-07-14">July 14, 2014</span>
					</div>
				</div>
				<div class="post_content" itemprop="articleBody">
<div style="margin:7px 0px 6px 0px; padding:5px;">

<div style="float:left; width=95px">
<div id="___plusone_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: transparent none repeat scroll 0% 0%; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 90px; height: 20px;"><iframe title="+1" data-gapiattached="true" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/fastbutton.htm" name="I0_1473159462733" id="I0_1473159462733" vspace="0" tabindex="0" style="position: static; top: 0px; width: 90px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 20px;" scrolling="no" marginwidth="0" marginheight="0" hspace="0" frameborder="0" width="100%"></iframe></div>
</div>

<div style="float:left; padding:2px; width:90px"><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.thegeekstuff.com%2F2014%2F07%2Fpython-regex-examples%2F&amp;send=false&amp;layout=button_count&amp;width=450&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font&amp;height=21" scrolling="no" style="border:none; overflow:hidden; width:450px; height:21px;" allowtransparency="true" frameborder="0"></iframe>
</div>

<div style="width=95px">
<a href="http://twitter.com/share" class="twitter-share-button" data-count="horizontal">Tweet</a><script type="text/javascript" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/widgets.htm"></script>
</div>

</div>
<p>Regular expressions as a concept is not exclusive to Python at all.</p>
<p>Python, however, does have some nuances when it come to working with regular expressions.</p>
<p>This article is part of a series of articles on Python Regular Expressions.<br>
<span id="more-16047"></span><br>
In the first article of this series, we will focus on discussing how we 
work with regular expressions in python, highlighting python specifics.</p>
<p>We are going to introduce the methods we can use to perform queries 
over strings in Python. We’ll then talk about how we can use grouping to
 work with sub-parts of the matches we found using our queries.</p>
<p>The package we are interested in using to work with regular expressions in python is appropriately named ‘re’.</p>
<pre>  &gt;&gt;&gt; import re</pre>
<h3>1. Raw Strings in Python</h3>
<p>The python parser interprets ‘\’ (backslashes) as escape characters in string literals.</p>
<p>If the backslash is followed by a special sequence recognized by the 
parser, the whole escape sequence is replaced by a corresponding special
 character (for example, ‘\n’ is replaced by a newline character when 
processed by the parser).</p>
    <center>
      <div style="margin-left:2px; margin-top:10px; margin-bottom:10px; ">

        <!-- AD BLOCK -->
		
<script async="" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/adsbygoogle.js"></script>
<!-- TGS Inside Content -->
<ins data-adsbygoogle-status="done" class="adsbygoogle" style="display: inline-block; width: 300px; height: 250px;" data-ad-client="ca-pub-8090601437064582" data-ad-slot="8643685131"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><ins id="aswift_1_anchor" style="display:block;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;" frameborder="0" height="250" width="300"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>

        <!-- END AD BLOCK -->

	  </div>
    </center>


<p>This behavior causes a problem when working with regular expressions 
in python because the ‘re’ package also uses backslash characters to 
escape special regex characters (like * or +).</p>
<p>The combination of these two behaviors would mean that sometimes you 
would have to escape escape characters themselves (when the special 
character was recognized by both the python parser and the regex 
parser), yet other times you would not (if the special character was not
 recognized by the python parser).</p>
<p>Rather than bend our brains trying to figure out how many backslashes we need, we can instead use raw strings.</p>
<p>A raw string is created by simply adding an ‘r’ character before the 
opening quote of a normal string. When a string is raw, the python 
parser will not even attempt to make any substitutions within it. 
Essentially, you are telling the parser to completely leave your string 
alone.</p>
<pre>  &gt;&gt;&gt; string = 'This is a\nnormal string'
  &gt;&gt;&gt; rawString = r'and this is a\nraw string'
  &gt;&gt;&gt; print string
  This is a
  normal string
  &gt;&gt;&gt; print rawString
  and this is a\nraw string</pre>
<h3>Performing Queries with Regex in Python</h3>
<p>The ‘re’ package provides several methods to actually perform queries
 on an input string. The methods that we will be discussing are:</p>
<ul>
<li>re.match()</li>
<li>re.search()</li>
<li>re.findall()</li>
</ul>
<p>Each of the methods accepts a regular expression, and string to scan 
for matches. Lets take a look at each of these methods in a little more 
detail to see how they work and how they differ.</p>
<h3>2. Find Using re.match – Matches Beginning</h3>
<p>Lets first take a look at the match() method. The way the match() 
method works is that it will only find matches if they occur at the 
start of the string being searched.</p>
<p>So for example, calling match() on the string ‘dog cat dog’, looking for the pattern ‘dog’ will match:</p>
<pre>  &gt;&gt;&gt; re.match(r'dog', 'dog cat dog')
  &lt;_sre.SRE_Match object at 0xb743e720&lt;
  &gt;&gt;&gt; match = re.match(r'dog', 'dog cat dog')
  &gt;&gt;&gt; match.group(0)
  'dog'</pre>
<p>We’ll be talking more about the group() method in a little bit. For 
now, just know that when called with 0 as it’s argument, the group() 
method returns the pattern matched by the query.</p>
<p>I’m also glossing over the returned SRE_Match object for now, we’ll talk about that in a minute too.</p>
<p>But, if we call match() on the same string, looking for the pattern ‘cat’, we won’t:</p>
<pre>  &gt;&gt;&gt; re.match(r'cat', 'dog cat dog')
  &gt;&gt;&gt;</pre>
<h3>3. Find Using re.search – Matches Anywhere</h3>
<p>The search() method is similar to match(), but search() doesn’t 
restrict us to only finding matches at the beginning of the string, so 
searching for ‘cat’ in our example string finds a match:</p>
<pre>  search(r'cat', 'dog cat dog')
  &gt;&gt;&gt; match.group(0)
  'cat'</pre>
<p>The search() method, however, stops looking after it finds a match, 
so search()-ing for ‘dog’ in our example string only finds the first 
occurrence:</p>
<pre>  &gt;&gt;&gt; match = re.search(r'dog', 'dog cat dog')
  &gt;&gt;&gt; match.group(0)
  'dog'</pre>
<h3>4. Get Using re.findall – All Matching Objects</h3>
<p>The querying method that I use by far the most in python though is 
the findall() method. Rather than being returned match objects (we’ll 
talk more about match objects in a little bit), when we call findall(), 
we simply get a list of all matching patterns. For me, this is just 
simpler. Calling findall() on our example string we get:</p>
<pre>  &gt;&gt;&gt; re.findall(r'dog', 'dog cat dog')
  ['dog', 'dog']
  &gt;&gt;&gt; re.findall(r'cat', 'dog cat dog')
  ['cat']</pre>
<h3>5. Use match.start and match.end Methods</h3>
<p>So, what exactly are these ‘match objects’ that search() and match() gave us earlier?</p>
<p>Rather than simply return the matching portion of the string, 
search() and match() return ‘matches’, which are essentially a wrapper 
around the matching substring.</p>
<p>You saw earlier that I could get to the matching substring by calling
 the matches group() method, (match objects are actually pretty useful 
when it comes to working with grouping, as we will see in the next 
section), but the match object also contains much more information about
 the matching substring.</p>
<p>For example, the match object can tell us the start and end indexes of the matching content from the original string:</p>
<pre>  &gt;&gt;&gt; match = re.search(r'dog', 'dog cat dog')
  &gt;&gt;&gt; match.start()
  0
  &gt;&gt;&gt; match.end()
  3</pre>
<p>Knowing information like this can sometimes be very useful.</p>
<h3>6. Group by Number Using match.group</h3>
<p>As I mentioned earlier, match objects come in very handy when working with grouping.</p>
<p>Grouping is the ability to address certain sub-parts of the entire 
regex match. We can define a group as a piece of the regular expression 
search string, and then individually address the corresponding content 
that was matched by this piece.</p>
<p>Let’s look at an example to see how this works:</p>
<pre>  &gt;&gt;&gt; contactInfo = 'Doe, John: 555-1212'</pre>
<p>The string I just created resembles a snippet taken out of someones 
address book. We can match the line with a regular expression like this 
one:</p>
<pre>  &gt;&gt;&gt; re.search(r'\w+, \w+: \S+', contactInfo)
  &lt;_sre.SRE_Match object at 0xb74e1ad8&lt;</pre>
<p>By surrounding certain parts of the regular expression in parentheses
 (the ‘(‘ and ‘)’ characters), we can group the content and then work 
with these individual groups.</p>
<pre>  &gt;&gt;&gt; match = re.search(r'(\w+), (\w+): (\S+)', contactInfo)</pre>
<p>These groups can be fetched using the match object’s group() method. 
The groups are addressable numerically in the order that they appear, 
from left to right, in the regular expression (starting with group 1):</p>
<pre>  &gt;&gt;&gt; match.group(1)
  'Doe'
  &gt;&gt;&gt; match.group(2)
  'John'
  &gt;&gt;&gt; match.group(3)
  '555-1212'</pre>
<p>The reason that the group numbering starts with group 1 is because 
group 0 is reserved to hold the entire match (we saw this earlier when 
we were learning about the match() and search() methods)</p>
<pre>  &gt;&gt;&gt; match.group(0)
  'Doe, John: 555-1212'</pre>
<h3>7. Grouping by Name Using match.group</h3>
<p>Sometimes, especially when a regular expression has a lot of groups, 
it is impractical to address each group by its number. Python also 
allows you to assign a name to a group using the following syntax:</p>
<pre>  &gt;&gt;&gt; match = re.search(r'(?P&lt;last&gt;\w+), (?P&lt;first&gt;\w+): (?P&lt;phone&gt;\S+)', contactInfo)</pre>
<p>When can still fetch the grouped content using the group() method, 
but this time specifying the names we assigned the groups instead of the
 numbering we used before:</p>
<pre>  &gt;&gt;&gt; match.group('last')
  'Doe'
  &gt;&gt;&gt; match.group('first')
  'John'
  &gt;&gt;&gt; match.group('phone')
  '555-1212'</pre>
<p>This makes for much more explicit and readable code. You can imagine 
that as the regular expression became more and more complicated, 
understanding what was being captured by a grouping would get harder and
 harder. Assigning names to your groups explicitly informs you and your 
readers of your intentions.</p>
<p>Grouping can be used with the findall() method too, even though it 
doesn’t return match objects. Instead, findall() will return a list of 
tuples, where the Nth element of each tuple corresponds to the Nth group
 of the regex pattern:</p>
<pre>  &gt;&gt;&gt; re.findall(r'(\w+), (\w+): (\S+)', contactInfo)
  [('Doe', 'John', '555-1212')]</pre>
<p>However, named grouping doesn’t work when using the findall() method.</p>
<p>In this article we’ve introduced the basics of working with regular 
expressions in Python. We’ve learned about raw strings (and the 
headaches that they can save you when working with regular expressions).
 We’ve also learned how to perform basic queries using the match(), 
search(), and findall() methods, and even how to work with 
sub-components of a match using grouping.</p>
<p>As always, to find out more about this topic, the Python Official documentation on <a href="https://docs.python.org/2/library/re.html">re package</a> is a great resource.</p>
<p>In future articles, we’ll dive deeper into regular expressions in 
Python. We’ll talk about how we can capture an even broader range of 
matches, how we can use them to make substitutions within a string, and 
how we can even use them to parse python data structures out of text 
files.</p>
<div style="margin:7px 0px 3px 0px; padding:5px; background:#F2F0E8">

<div style="float:left; width=95px">
<div id="___plusone_1" style="text-indent: 0px; margin: 0px; padding: 0px; background: transparent none repeat scroll 0% 0%; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 90px; height: 20px;"><iframe title="+1" data-gapiattached="true" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/fastbutton_002.htm" name="I1_1473159462748" id="I1_1473159462748" vspace="0" tabindex="0" style="position: static; top: 0px; width: 90px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 20px;" scrolling="no" marginwidth="0" marginheight="0" hspace="0" frameborder="0" width="100%"></iframe></div>
</div>

<div style="float:left; width=95px">
<a href="http://twitter.com/share" class="twitter-share-button" data-count="horizontal">Tweet</a><script type="text/javascript" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/widgets.htm"></script>
</div>

<div style="float:left; padding:2px; width:90px"><iframe src="http://www.facebook.com/plugins/like.php?href=http%3A%2F%2Fwww.thegeekstuff.com%2F2014%2F07%2Fpython-regex-examples%2F&amp;send=false&amp;layout=button_count&amp;width=450&amp;show_faces=false&amp;action=like&amp;colorscheme=light&amp;font&amp;height=21" scrolling="no" style="border:none; overflow:hidden; width:450px; height:21px;" allowtransparency="true" frameborder="0"></iframe>
</div>

<div style="padding:1px">
&gt;&nbsp;<a href="#commentform" rel="nofollow">Add your comment</a>
</div>

</div>
<h3>If you enjoyed this article, you might also like..</h3>
<table>
<tbody><tr>
<td valign="top">
<ol>
<li><a href="http://www.thegeekstuff.com/2010/12/50-unix-linux-sysadmin-tutorials/">50 Linux Sysadmin Tutorials</a></li>
<li><a href="http://www.thegeekstuff.com/2010/11/50-linux-commands/">50 Most Frequently Used Linux Commands (With Examples)</a></li>
<li><a href="http://www.thegeekstuff.com/2011/12/linux-performance-monitoring-tools/">Top 25 Best Linux Performance Monitoring and Debugging Tools</a></li>
<li><a href="http://www.thegeekstuff.com/2009/03/15-practical-linux-find-command-examples/">Mommy, I found it! – 15 Practical Linux Find Command Examples</a></li>
<li><a href="http://www.thegeekstuff.com/linux-101-hacks-ebook/">Linux 101 Hacks 2nd Edition eBook</a>&nbsp;<img title="Linux 101 Hacks Book" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/free-small.png" alt="Linux 101 Hacks Book"></li>
</ol>
</td>
<td>
<ul>
<li><a href="http://www.thegeekstuff.com/2010/01/awk-introduction-tutorial-7-awk-print-examples/">Awk Introduction – 7 Awk Print Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2009/10/unix-sed-tutorial-advanced-sed-substitution-examples/">Advanced Sed Substitution Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2009/03/8-essential-vim-editor-navigation-fundamentals/">8 Essential Vim Editor Navigation Fundamentals</a></li>
<li><a href="http://www.thegeekstuff.com/2011/06/iptables-rules-examples/">25 Most Frequently Used Linux IPTables Rules Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2008/08/turbocharge-putty-with-12-powerful-add-ons-software-for-geeks-3/">Turbocharge PuTTY with 12 Powerful Add-Ons</a></li>
</ul>
</td>
</tr>
</tbody></table>
<br>
<center>
<table id="booktable">
<tbody><tr>
<td>
<a rel="nofollow" href="http://www.thegeekstuff.com/bash-101-hacks-ebook/"><img title="Bash 101 Hacks Book" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/bash-132.png" alt="Bash 101 Hacks Book"></a>
</td>
<td>
<a rel="nofollow" href="http://www.thegeekstuff.com/sed-awk-101-hacks-ebook/"><img title="Sed and Awk 101 Hacks Book" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/sed-and-awk-132.png" alt="Sed and Awk 101 Hacks Book"></a>
</td>
<td>
<a rel="nofollow" href="http://www.thegeekstuff.com/nagios-core-ebook/"><img title="Nagios Core 3 Book" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/nagios-core-132.png" alt="Nagios Core 3 Book"></a>
</td>
<td>
<a rel="nofollow" href="http://www.thegeekstuff.com/vim-101-hacks-ebook/"><img title="Vim 101 Hacks Book" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/vim-101-hacks-132.png" alt="Vim 101 Hacks Book"></a>
</td>
</tr>
</tbody></table>
</center>
<br>
				</div>
				<p class="post_tags" itemprop="keywords">
					<span class="post_tags_intro">Tagged as:</span>
					<a href="http://www.thegeekstuff.com/tag/python-findall-regex/" rel="tag">Python findall RegEx</a>,
					<a href="http://www.thegeekstuff.com/tag/python-match-exact-string/" rel="tag">Python Match Exact String</a>,
					<a href="http://www.thegeekstuff.com/tag/python-match-example/" rel="tag">Python Match Example</a>,
					<a href="http://www.thegeekstuff.com/tag/python-match-group-example/" rel="tag">Python Match Group Example</a>,
					<a href="http://www.thegeekstuff.com/tag/python-match-object/" rel="tag">Python Match object</a>,
					<a href="http://www.thegeekstuff.com/tag/python-match-pattern/" rel="tag">Python Match Pattern</a>,
					<a href="http://www.thegeekstuff.com/tag/python-match-regex/" rel="tag">Python Match RegEx</a>,
					<a href="http://www.thegeekstuff.com/tag/python-match-string/" rel="tag">Python Match String</a>,
					<a href="http://www.thegeekstuff.com/tag/python-re-examples/" rel="tag">Python re Examples</a>,
					<a href="http://www.thegeekstuff.com/tag/python-regex-examples/" rel="tag">Python RegEx Examples</a>,
					<a href="http://www.thegeekstuff.com/tag/python-search-string/" rel="tag">Python Search String</a>,
					<a href="http://www.thegeekstuff.com/tag/python-search-substring/" rel="tag">Python Search SubString</a>
				</p>
			</div>
			<div id="comments">
				<p class="comments_intro"><span class="bracket">{</span> <span class="num_comments">12</span> comments… <a href="#commentform" rel="nofollow">add one</a> <span class="bracket">}</span></p>
				<ul class="comment_list">
					<li class="comment even thread-even depth-1" id="comment-1959669">
						<div class="comment_head">
							<span class="avatar"></span>
							<span class="comment_author">David P</span>
							<span class="comment_date">July 15, 2014, 11:42 am</span>
						</div>
						<div class="comment_text grt" id="comment-body-1959669"><p>Your syntax for point 7 is slightly wrong. The group names should be places within , not &lt;left-facing angle brackets&lt;.</p>
						</div>
						<div class="comment_footer">
							<a class="comment_permalink" href="#comment-1959669" title="permalink to this comment" rel="nofollow">Link</a>
						</div>
</li><!-- #comment-## -->
					<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1960911">
						<div class="comment_head">
							<span class="avatar"></span>
							<span class="comment_author">Bhagyaraj</span>
							<span class="comment_date">July 15, 2014, 11:04 pm</span>
						</div>
						<div class="comment_text grt" id="comment-body-1960911"><p>Hi David P,</p>
<p>What exactly the syntax, not seeing any errors with this.</p>
<p>mat = re.search(r'(?P\w+), (?P\w+): (?P\S+)’, catacinfo);</p>
<p>print mat.group(0);<br>
print mat.group(‘last’);<br>
print mat.group(‘Nick’);<br>
print mat.group(‘phone’);</p>
						</div>
						<div class="comment_footer">
							<a class="comment_permalink" href="#comment-1960911" title="permalink to this comment" rel="nofollow">Link</a>
						</div>
</li><!-- #comment-## -->
					<li class="comment even thread-even depth-1" id="comment-1960922">
						<div class="comment_head">
							<span class="avatar"></span>
							<span class="comment_author">Bhagyaraj</span>
							<span class="comment_date">July 15, 2014, 11:07 pm</span>
						</div>
						<div class="comment_text grt" id="comment-body-1960922"><p>seems to Geekstuff site not takeing<br>
mat = re.search(r'(?P\w+), (?P\w+): (?P\S+)’, catacinfo);</p>
						</div>
						<div class="comment_footer">
							<a class="comment_permalink" href="#comment-1960922" title="permalink to this comment" rel="nofollow">Link</a>
						</div>
</li><!-- #comment-## -->
					<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-1967410">
						<div class="comment_head">
							<span class="avatar"></span>
							<span class="comment_author">Seth</span>
							<span class="comment_date">July 18, 2014, 11:09 am</span>
						</div>
						<div class="comment_text grt" id="comment-body-1967410"><p>Thank you for covering regular expressions in Python. It is quite useful.</p>
						</div>
						<div class="comment_footer">
							<a class="comment_permalink" href="#comment-1967410" title="permalink to this comment" rel="nofollow">Link</a>
						</div>
</li><!-- #comment-## -->
					<li class="comment even thread-even depth-1" id="comment-2070414">
						<div class="comment_head">
							<span class="avatar"></span>
							<span class="comment_author">Pratik</span>
							<span class="comment_date">August 13, 2014, 1:36 am</span>
						</div>
						<div class="comment_text grt" id="comment-body-2070414"><p>Thanks Ramesh,<br>
this regular expression comes very helpful in a lot of situations</p>
						</div>
						<div class="comment_footer">
							<a class="comment_permalink" href="#comment-2070414" title="permalink to this comment" rel="nofollow">Link</a>
						</div>
</li><!-- #comment-## -->
					<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-3118323">
						<div class="comment_head">
							<span class="avatar"></span>
							<span class="comment_author">Anidil</span>
							<span class="comment_date">December 3, 2014, 9:10 am</span>
						</div>
						<div class="comment_text grt" id="comment-body-3118323"><p>point 7 works for me</p>
						</div>
						<div class="comment_footer">
							<a class="comment_permalink" href="#comment-3118323" title="permalink to this comment" rel="nofollow">Link</a>
						</div>
</li><!-- #comment-## -->
					<li class="comment even thread-even depth-1" id="comment-3118331">
						<div class="comment_head">
							<span class="avatar"></span>
							<span class="comment_author">Anidil</span>
							<span class="comment_date">December 3, 2014, 9:12 am</span>
						</div>
						<div class="comment_text grt" id="comment-body-3118331"><p>In [4]: contactInfo = ‘Doe, John: 555-1212′<br>
In [5]: match = re.search(r'(?P\w+), (?P\w+): (?P\S+)’, contactInfo)</p>
<p>In [6]: match.group(‘last’)<br>
Out[6]: ‘Doe’<br>
In [7]: match.group(‘first’)<br>
Out[7]: ‘John’</p>
						</div>
						<div class="comment_footer">
							<a class="comment_permalink" href="#comment-3118331" title="permalink to this comment" rel="nofollow">Link</a>
						</div>
</li><!-- #comment-## -->
					<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-3564713">
						<div class="comment_head">
							<span class="avatar"></span>
							<span class="comment_author">jk</span>
							<span class="comment_date">January 15, 2015, 10:20 am</span>
						</div>
						<div class="comment_text grt" id="comment-body-3564713"><p>good 
article. I have a string str = ‘abcdefghijklolol’ and i want to find all
 occurences of pattern ‘lol’ in string str. Notice how the pattern 
string is occurs recursively i.e. lolol. That should give me two matches
 correct? findall is returning only one occurence of ‘lol’. </p>
<p>m = re.findall(r’lol’, ‘abcdefghijklolol’)<br>
print m<br>
[‘lol’]</p>
<p>how can i find the multiple occurences of string ‘lol’</p>
						</div>
						<div class="comment_footer">
							<a class="comment_permalink" href="#comment-3564713" title="permalink to this comment" rel="nofollow">Link</a>
						</div>
</li><!-- #comment-## -->
					<li class="comment even thread-even depth-1" id="comment-3858213">
						<div class="comment_head">
							<span class="avatar"></span>
							<span class="comment_author">sateesh</span>
							<span class="comment_date">March 2, 2015, 11:49 pm</span>
						</div>
						<div class="comment_text grt" id="comment-body-3858213"><p>Thank U for quite Easy Way of Explaining Regular Expressions…..</p>
						</div>
						<div class="comment_footer">
							<a class="comment_permalink" href="#comment-3858213" title="permalink to this comment" rel="nofollow">Link</a>
						</div>
</li><!-- #comment-## -->
					<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-4253180">
						<div class="comment_head">
							<span class="avatar"></span>
							<span class="comment_author">Manikandan</span>
							<span class="comment_date">June 18, 2015, 9:47 am</span>
						</div>
						<div class="comment_text grt" id="comment-body-4253180"><p>how can i check a input string is valid mail_id or not…? I just want to print your input string is valid orelse not valid.</p>
<p>Expecting your valuable update.</p>
						</div>
						<div class="comment_footer">
							<a class="comment_permalink" href="#comment-4253180" title="permalink to this comment" rel="nofollow">Link</a>
						</div>
</li><!-- #comment-## -->
					<li class="comment even thread-even depth-1" id="comment-4382422">
						<div class="comment_head">
							<span class="avatar"></span>
							<span class="comment_author">pit</span>
							<span class="comment_date">August 6, 2015, 2:24 pm</span>
						</div>
						<div class="comment_text grt" id="comment-body-4382422"><p>Hi, thank you for your tutorial! It is explained very well.</p>
						</div>
						<div class="comment_footer">
							<a class="comment_permalink" href="#comment-4382422" title="permalink to this comment" rel="nofollow">Link</a>
						</div>
</li><!-- #comment-## -->
					<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-4690083">
						<div class="comment_head">
							<span class="avatar"></span>
							<span class="comment_author">Anonymous</span>
							<span class="comment_date">February 1, 2016, 4:22 am</span>
						</div>
						<div class="comment_text grt" id="comment-body-4690083"><p>clear and nice explaination</p>
						</div>
						<div class="comment_footer">
							<a class="comment_permalink" href="#comment-4690083" title="permalink to this comment" rel="nofollow">Link</a>
						</div>
</li><!-- #comment-## -->
				</ul>
				<form id="commentform" method="post" action="http://www.thegeekstuff.com/wp-comments-post.php">
					<a rel="nofollow" id="cancel-comment-reply-link" href="http://www.thegeekstuff.com/2014/07/python-regex-examples/#respond" style="display:none;">Cancel reply</a>
					<p class="comment_form_title">Leave a Comment</p>
					<p id="comment_form_name">
						<label for="author">Name</label>
						<input id="author" class="input_text" name="author" tabindex="1" type="text">
					</p>
					<p id="comment_form_email">
						<label for="email">Email</label>
						<input id="email" class="input_text" name="email" tabindex="2" type="text">
					</p>
					<p id="comment_form_url">
						<label for="url">Website</label>
						<input id="url" class="input_text" name="url" tabindex="3" type="text">
					</p>
					<p id="comment_form_comment">
						<label for="comment">Comment</label>
						<textarea name="comment" id="comment" class="input_text" tabindex="4" rows="6"></textarea>
					</p>
					<p id="comment_form_submit">
						<input id="submit" class="input_submit" name="submit" tabindex="5" value="Submit" type="submit">
					</p>
<p style="display: none;"><input id="akismet_comment_nonce" name="akismet_comment_nonce" value="461b3f1ad9" type="hidden"></p>

	<p style="clear: both;" class="subscribe-to-comments">
	<input name="subscribe" id="subscribe" value="subscribe" style="width: auto;" type="checkbox">
	<label for="subscribe">Notify me of followup comments via e-mail</label>
	</p>


<p style="display: none;"></p><input name="comment_post_ID" value="16047" id="comment_post_ID" type="hidden">
<input name="comment_parent" id="comment_parent" value="0" type="hidden">
				<input id="ak_js" name="ak_js" value="1473159462499" type="hidden"></form>
			</div>
			<div class="prev_next">
				<p class="next_post">Next post: <a href="http://www.thegeekstuff.com/2014/07/ti-ble-custom-profile/" rel="next">How to Develop Bluetooth Low Energy Stack TI CC2541 Custom Profile</a></p>
				<p class="previous_post">Previous post: <a href="http://www.thegeekstuff.com/2014/07/cisco-mds-commands/" rel="prev">7 Cisco MDS 9000 Switch Command Line Examples for VSAN Zone Zoneset</a></p>
			</div>
		</div>
		<div class="sidebar">
<div class="widget widget_text" id="text-21">			<div class="textwidget"><a title="Subscribe via RSS" href="http://www.thegeekstuff.com/feed" rel="nofollow">RSS</a>&nbsp; | &nbsp;<a title="Subscribe via Email" href="http://feedburner.google.com/fb/a/mailverify?uri=TheGeekStuff&amp;loc=en_US" rel="nofollow">Email</a>&nbsp; | &nbsp;<a title="Follow us on Twitter" href="http://twitter.com/thegeekstuff" rel="nofollow">Twitter</a>&nbsp; | &nbsp;<a title="Become a fan" href="http://www.facebook.com/thegeekstuff" rel="nofollow">Facebook</a>&nbsp; | &nbsp;<a title="Follow us on Google+" href="https://plus.google.com/112493711428194838421/posts">Google+</a>
<br><br>
<form action="http://www.thegeekstuff.com/search" id="cse-search-box">
  <div>
    <input name="cx" value="005666763606120661560:zkmegbt_djm" type="hidden">
    <input name="cof" value="FORID:10" type="hidden">
    <input name="ie" value="UTF-8" type="hidden">
    <input style="border: 1px solid rgb(126, 157, 185); padding: 2px; background: rgb(255, 255, 255) url(&quot;https://www.google.com/cse/static/en/google_custom_search_watermark.gif&quot;) no-repeat scroll left center;" name="q" size="30" type="text">
    <input style="border-color:#CCCCCC #999999 #999999 #CCCCCC; border-style:double; border-width:1px; overflow:visible;" name="sa" value="Search" type="submit">
  </div>
<input value="www.thegeekstuff.com/2014/07/python-regex-examples" name="siteurl" type="hidden"><input value="www.google.co.in/" name="ref" type="hidden"><input name="ss" type="hidden"></form>
<script type="text/javascript" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/jsapi"></script>
<script type="text/javascript">google.load("elements", "1", {packages: "transliteration"});</script><script src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/a" type="text/javascript"></script><link href="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/transliteration.css" type="text/css" rel="stylesheet"><script src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/transliteration.js" type="text/javascript"></script>
<script type="text/javascript" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/t13n"></script>
<script type="text/javascript" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/brand"></script>
<br></div>
		</div><div class="widget widget_text" id="text-3">			<div class="textwidget"><script async="" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/adsbygoogle.js"></script>
<!-- TGS Side Bar -->
<ins data-adsbygoogle-status="done" class="adsbygoogle" style="display: inline-block; width: 300px; height: 250px;" data-ad-client="ca-pub-8090601437064582" data-ad-slot="9054077260"><ins id="aswift_2_expand" style="display:inline-table;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><ins id="aswift_2_anchor" style="display:block;border:none;height:250px;margin:0;padding:0;position:relative;visibility:visible;width:300px;background-color:transparent"><iframe marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_2" name="aswift_2" style="left:0;position:absolute;top:0;" frameborder="0" height="250" width="300"></iframe></ins></ins></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
<br></div>
		</div><div class="widget widget_text" id="text-4"><p class="widget_title">EBOOKS</p>			<div class="textwidget"><ul>
<li><img title="Linux 101 Hacks Book" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/free-small.png" alt="Linux 101 Hacks Book">&nbsp;<a href="http://www.thegeekstuff.com/linux-101-hacks-ebook/">Linux 101 Hacks 2nd Edition eBook</a> - Practical Examples to Build a Strong Foundation in Linux</li>
<li><a href="http://www.thegeekstuff.com/bash-101-hacks-ebook/">Bash 101 Hacks eBook</a> - Take Control of Your Bash Command Line and Shell Scripting</li>
<li><a href="http://www.thegeekstuff.com/sed-awk-101-hacks-ebook/">Sed and Awk 101 Hacks eBook</a> - Enhance Your UNIX / Linux Life with Sed and Awk</li>
<li><a href="http://www.thegeekstuff.com/vim-101-hacks-ebook/">Vim 101 Hacks eBook</a> - Practical Examples for Becoming Fast and Productive in Vim Editor</li>
<li><a href="http://www.thegeekstuff.com/nagios-core-ebook/">Nagios Core 3 eBook</a> - Monitor Everything, Be Proactive, and Sleep Well</li>
</ul></div>
		</div><div class="widget widget_text" id="text-22">			<div class="textwidget"><iframe src="//www.facebook.com/plugins/likebox.php?href=http%3A%2F%2Fwww.facebook.com%2Fthegeekstuff&amp;width&amp;height=258&amp;colorscheme=light&amp;show_faces=true&amp;header=false&amp;stream=false&amp;show_border=true" scrolling="no" style="border:none; overflow:hidden; height:258px;" allowtransparency="true" frameborder="0"></iframe></div>
		</div><div class="widget widget_text" id="text-17"><p class="widget_title">POPULAR POSTS</p>			<div class="textwidget"><ul>
<li><a href="http://www.thegeekstuff.com/2009/01/12-amazing-and-essential-linux-books-to-enrich-your-brain-and-library/">12 Amazing and Essential Linux Books To Enrich Your Brain and Library</a></li>
<li><a href="http://www.thegeekstuff.com/2010/12/50-unix-linux-sysadmin-tutorials/">50 UNIX / Linux Sysadmin Tutorials</a></li>
<li><a href="http://www.thegeekstuff.com/2010/11/50-linux-commands/">50 Most Frequently Used UNIX / Linux Commands (With Examples)</a></li>
<li><a href="http://www.thegeekstuff.com/2010/08/gtd-getting-things-done/">How To Be Productive and Get Things Done Using GTD</a></li>
<li><a href="http://www.thegeekstuff.com/2010/03/30-things-to-do-when-you-are-bored-and-have-a-computer/">30 Things To Do When you are Bored and have a Computer</a></li>
<li><a href="http://www.thegeekstuff.com/2010/09/linux-file-system-structure/">Linux Directory Structure (File System Structure) Explained with Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2009/06/15-practical-crontab-examples/">Linux Crontab: 15 Awesome Cron Job Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2009/03/15-practical-unix-grep-command-examples/">Get a Grip on the Grep! – 15 Practical Grep Command Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2009/07/linux-ls-command-examples/">Unix LS Command: 15 Practical Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2008/08/15-examples-to-master-linux-command-line-history/">15 Examples To Master Linux Command Line History</a></li>
<li><a href="http://www.thegeekstuff.com/2010/08/bug-tracking-system/">Top 10 Open Source Bug Tracking System</a></li>
<li><a href="http://www.thegeekstuff.com/2009/01/vi-and-vim-macro-tutorial-how-to-record-and-play/">Vi and Vim Macro Tutorial: How To Record and Play</a></li>
<li><a href="http://www.thegeekstuff.com/2009/03/15-practical-linux-find-command-examples/">Mommy, I found it! -- 15 Practical Linux Find Command Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2009/07/best-gmail-tips-and-tricks/">15 Awesome Gmail Tips and Tricks</a></li>
<li><a href="http://www.thegeekstuff.com/2009/06/expertise-in-google-search/">15 Awesome Google Search Tips and Tricks</a></li>
<li><a href="http://www.thegeekstuff.com/2010/08/raid-levels-tutorial/">RAID 0, RAID 1, RAID 5, RAID 10 Explained with Diagrams</a></li>
<li><a href="http://www.thegeekstuff.com/2010/01/15-practical-unix-linux-top-command-examples/">Can You Top This? 15 Practical Linux Top Command Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2009/09/top-5-best-network-monitoring-tools/">Top 5 Best System Monitoring Tools</a></li>
<li><a href="http://www.thegeekstuff.com/2009/06/top-5-best-linux-os-distributions/">Top 5 Best Linux OS Distributions</a></li>
<li><a href="http://www.thegeekstuff.com/2008/06/how-to-monitor-remote-linux-host-using-nagios-30/">How To Monitor Remote Linux Host using Nagios 3.0</a></li>
<li><a href="http://www.thegeekstuff.com/2010/01/awk-introduction-tutorial-7-awk-print-examples/">Awk Introduction Tutorial – 7 Awk Print Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2010/09/rsync-command-examples/">How to Backup Linux? 15 rsync Command Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2009/09/the-ultimate-wget-download-guide-with-15-awesome-examples/">The Ultimate Wget Download Guide With 15 Awesome Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2009/07/top-5-best-linux-text-editors/">Top 5 Best Linux Text Editors</a></li>
<li><a href="http://www.thegeekstuff.com/2010/08/tcpdump-command-examples/">Packet Analyzer: 15 TCPDUMP Command Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2010/06/bash-array-tutorial/">The Ultimate Bash Array Tutorial with 15 Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2008/11/3-steps-to-perform-ssh-login-without-password-using-ssh-keygen-ssh-copy-id/">3 Steps to Perform SSH Login Without Password Using ssh-keygen &amp; ssh-copy-id</a></li>
<li><a href="http://www.thegeekstuff.com/2009/10/unix-sed-tutorial-advanced-sed-substitution-examples/">Unix Sed Tutorial: Advanced Sed Substitution Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2010/03/netstat-command-examples/">UNIX / Linux: 10 Netstat Command Examples</a></li>
<li><a href="http://www.thegeekstuff.com/2008/06/the-ultimate-guide-for-creating-strong-passwords/">The Ultimate Guide for Creating Strong Passwords</a></li>
<li><a href="http://www.thegeekstuff.com/2008/08/6-steps-to-secure-your-home-wireless-network/">6 Steps to Secure Your Home Wireless Network</a></li>
<li><a href="http://www.thegeekstuff.com/2008/08/turbocharge-putty-with-12-powerful-add-ons-software-for-geeks-3/">Turbocharge PuTTY with 12 Powerful Add-Ons</a></li>
</ul></div>
		</div><div class="widget widget_text" id="text-19"><p class="widget_title">CATEGORIES</p>			<div class="textwidget"><ul>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/linux/">Linux Tutorials</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/vim-2/">Vim Editor</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/sed/">Sed Scripting</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/awk/">Awk Scripting</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/bash-2/">Bash Shell Scripting</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/nagios-2/">Nagios Monitoring</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/openssh-2/">OpenSSH</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/iptables/">IPTables Firewall</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/apache/">Apache Web Server</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/mysql/">MySQL Database</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/perl/">Perl Programming</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/google/">Google Tutorials</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/ubuntu/">Ubuntu Tutorials</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/postgresql/">PostgreSQL DB</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/hello-world/">Hello World Examples</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/c-programming/">C Programming</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/c-plus-plus/">C++ Programming</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/dell-2/">DELL Server Tutorials</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/oracle/">Oracle Database</a></li>
<li><a rel="nofollow" href="http://www.thegeekstuff.com/category/vmware/">VMware Tutorials</a></li>
</ul></div>
		</div><div class="widget widget_text" id="text-20">			<div class="textwidget"><div id="___person_0" style="text-indent: 0px; margin: 0px; padding: 0px; background: transparent none repeat scroll 0% 0%; border-style: none; float: none; line-height: normal; font-size: 1px; vertical-align: baseline; display: inline-block; width: 300px; height: 106px;"><iframe title="+Badge" data-gapiattached="true" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/person.htm" name="I2_1473159462751" id="I2_1473159462751" vspace="0" tabindex="0" style="position: static; top: 0px; width: 300px; margin: 0px; border-style: none; left: 0px; visibility: visible; height: 106px;" scrolling="no" marginwidth="0" marginheight="0" hspace="0" frameborder="0" width="100%"></iframe></div></div>
		</div>		</div>
	</div>
	<div class="footer">
<div id="footer_widgets" class="columns_3">
	<div class="one-third sidebar first">
<div class="widget widget_text" id="text-7"><h4 class="widget_title">About The Geek Stuff</h4>			<div class="textwidget"><br>
<img class="float" title="Ramesh Natarajan" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/ramesh-small.gif" alt="Linux 101 Hacks Book">
My name is <strong>Ramesh Natarajan</strong>. I will be posting 
instruction guides, how-to, troubleshooting tips and tricks on Linux, 
database, hardware, security and web. My focus is to write articles that
 will either teach you or help you resolve a problem. Read more about <a href="http://www.thegeekstuff.com/about/">Ramesh Natarajan</a> and the blog.</div>
		</div>	</div>
	<div class="one-third sidebar">
<div class="widget widget_text" id="text-9"><h4 class="widget_title">Contact Us</h4>			<div class="textwidget"><br>
<strong>Email Me :</strong>
Use this <a href="http://www.thegeekstuff.com/contact" rel="nofollow">Contact Form</a>
 to get in touch me with your comments, questions or suggestions about 
this site. You can also simply drop me a line to say hello!.
<br><br>
<a title="Follow us on Google+" href="https://plus.google.com/112493711428194838421/posts">Follow us on Google+</a>
<br><br>
<a title="Follow us on Twitter" href="http://twitter.com/thegeekstuff" rel="nofollow">Follow us on Twitter</a>
<br><br>
<a href="http://www.facebook.com/thegeekstuff" rel="nofollow">Become a fan on Facebook</a>&nbsp;&nbsp;</div>
		</div>	</div>
	<div class="one-third sidebar last">
<div class="widget widget_text" id="text-8"><h4 class="widget_title">Support Us</h4>			<div class="textwidget"><br>
Support this blog by purchasing one of my ebooks.
<br><br>
<a rel="nofollow" href="http://www.thegeekstuff.com/bash-101-hacks-ebook/">Bash 101 Hacks eBook</a>
<br><br>
<a rel="nofollow" href="http://www.thegeekstuff.com/sed-awk-101-hacks-ebook/">Sed and Awk 101 Hacks eBook</a>
<br><br>
<a rel="nofollow" href="http://www.thegeekstuff.com/vim-101-hacks-ebook/">Vim 101 Hacks eBook</a>
<br><br>
<a rel="nofollow" href="http://www.thegeekstuff.com/nagios-core-ebook/">Nagios Core 3 eBook</a></div>
		</div>	</div>
	<div style="clear:both;"></div>
</div>
		<p class="attribution">Copyright © 2008–2015 Ramesh Natarajan. All rights reserved  | <a href="http://www.thegeekstuff.com/copyright">Terms of Service</a></p>
	</div>
</div>
<script type="text/javascript" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/form.js"></script>
<script type="text/javascript" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/comment-reply.js"></script>
<script type="text/javascript" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/wp-embed.xml"></script>
<script type="text/javascript">
(function(){
	var classes = document.getElementsByClassName('menu_control');
	for (i = 0; i < classes.length; i++) {
		classes[i].onclick = function() {
			var menu = this.nextElementSibling;
			if (/show_menu/.test(menu.className))
				menu.className = menu.className.replace('show_menu', '').trim();
			else
				menu.className += ' show_menu';
		};
	}
})();
</script>
<noscript><style type="text/css" scoped>.menu { display: block; }</style></noscript>
<script gapi_processed="true" type="text/javascript" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/plusone.js"></script>



<iframe tabindex="-1" style="width: 1px; height: 1px; position: absolute; top: -100px;" src="7%20Python%20Regular%20Expressions%20Examples%20%E2%80%93%20Re%20Match%20Search%20FindAll_files/postmessageRelay.htm" id="oauth2relay562980551" name="oauth2relay562980551"></iframe></body></html>
<!-- Performance optimized by W3 Total Cache. Learn more: http://www.w3-edge.com/wordpress-plugins/

Page Caching using disk: enhanced
Content Delivery Network via Amazon Web Services: CloudFront: static.thegeekstuff.com

 Served from: www.thegeekstuff.com @ 2016-09-06 04:17:03 by W3 Total Cache -->